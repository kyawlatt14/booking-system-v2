-- USERS TABLE
CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    full_name VARCHAR(255),
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255),
    country VARCHAR(255),
    role VARCHAR(255) CHECK (role in ('USER','ADMIN')),
    created_at TIMESTAMP,
    email_verified BOOLEAN NOT NULL
);

-- PACKAGES TABLE
CREATE TABLE IF NOT EXISTS packages (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(255),
    description VARCHAR(255),
    country VARCHAR(255),
    price FLOAT NOT NULL,
    total_credits INT NOT NULL,
    validity_days INT NOT NULL
);

-- USER PACKAGES TABLE
CREATE TABLE IF NOT EXISTS user_packages (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT,
    pkg_id BIGINT,
    remaining_credits INT NOT NULL,
    purchase_date TIMESTAMP,
    expiry_date TIMESTAMP
);

-- CLASS SCHEDULE TABLE
CREATE TABLE IF NOT EXISTS class_schedule (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    class_name VARCHAR(255),
    country VARCHAR(255),
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    capacity INT NOT NULL,
    booked_count INT NOT NULL
);

-- BOOKINGS TABLE
CREATE TABLE IF NOT EXISTS bookings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT,
    class_schedule_id BIGINT,
    class_name VARCHAR(255),
    status VARCHAR(255),
    booked_time TIMESTAMP,
    class_date TIMESTAMP,
    booked_at TIMESTAMP
);

-- WAITLISTS TABLE
CREATE TABLE IF NOT EXISTS waitlists (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT,
    class_schedule_id BIGINT,
    added_to_waitlist_time TIMESTAMP
);

-- FOREIGN KEY CONSTRAINTS (Make sure all referenced tables exist before this step)
ALTER TABLE bookings
ADD CONSTRAINT fk_booking_class FOREIGN KEY (class_schedule_id) REFERENCES class_schedule(id);

ALTER TABLE bookings
ADD CONSTRAINT fk_booking_user FOREIGN KEY (user_id) REFERENCES users(id);

ALTER TABLE user_packages
ADD CONSTRAINT fk_userpackage_user FOREIGN KEY (user_id) REFERENCES users(id);

ALTER TABLE user_packages
ADD CONSTRAINT fk_userpackage_package FOREIGN KEY (pkg_id) REFERENCES packages(id);

ALTER TABLE waitlists
ADD CONSTRAINT fk_waitlist_class FOREIGN KEY (class_schedule_id) REFERENCES class_schedule(id);

ALTER TABLE waitlists
ADD CONSTRAINT fk_waitlist_user FOREIGN KEY (user_id) REFERENCES users(id);
